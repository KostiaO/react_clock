{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","setInterval","this","setState","console","log","prevProps","props","name","clearInterval","React","Component","App","isVisible","clockName","randomLetter","newArr","length","Math","floor","random","i","splice","String","fromCharCode","join","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"sNAOaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,QAAwBC,aAAY,cAAU,GALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,EAAKE,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,gCAeE,SAAmBS,GACbJ,KAAKK,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,eAAoBC,EAAUE,KAA9B,eAAyCN,KAAKK,MAAMC,SAlB1D,kCAsBE,WACEC,cAAcP,KAAKF,WAvBvB,oBA0BE,WACE,OACE,oBAAI,UAAQ,OAAZ,SAAoBE,KAAKN,MAAMC,WA5BrC,GAA2Ba,IAAMC,WCFpBC,EAAb,4MACEhB,MAAQ,CACNiB,WAAW,EACXC,UAAW,eAHf,EAMEC,aAAe,WACb,IAAMC,EAAmB,GAEzBA,EAAOC,OAASC,KAAKC,MAAsB,GAAhBD,KAAKE,UAEhC,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOC,OAAQI,GAAK,EACtCL,EAAOM,OAAOD,EAAG,EACfE,OAAOC,aAAaN,KAAKC,MAAsB,MAAhBD,KAAKE,YAGxC,OACEJ,EAAOS,KAAK,KAjBlB,4CAqBE,WAAU,IAAD,OACCZ,EAAcX,KAAKN,MAAnBiB,UAER,OACE,sBAAKa,UAAU,MAAf,UACE,6BAAKxB,KAAKN,MAAMkB,YACfD,GAAc,cAAC,EAAD,CAAOL,KAAMN,KAAKN,MAAMkB,YACvC,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKzB,SAAS,CAAEU,WAAW,KAC1CgB,UAAWhB,EAHb,kBAOC,KACD,wBACEc,KAAK,SACLC,QAAS,kBAAM,EAAKzB,SAAS,CAAEU,WAAW,KAC1CgB,SAAUhB,EAHZ,oBAOC,KACD,wBACEc,KAAK,SACLC,QAAS,kBAAM,EAAKzB,SAClB,CAAEW,UAAW,EAAKC,kBAHtB,gCA5CR,GAAyBL,IAAMC,WCF/BmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e14719f7.chunk.js","sourcesContent":["import React from 'react';\nimport { StateType } from '../types/StateType';\n\ntype Props = {\n  name: string\n};\n\nexport class Clock extends React.Component<Props, StateType> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line\n      console.log(`from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <h1 data-cy=\"time\">{this.state.time}</h1>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\nimport { StateTypeInApp } from './types/StateTypeInApp';\n\nexport class App extends React.Component<{}, StateTypeInApp> {\n  state = {\n    isVisible: true,\n    clockName: 'React Clock',\n  };\n\n  randomLetter = () => {\n    const newArr: string[] = [];\n\n    newArr.length = Math.floor(Math.random() * 20);\n\n    for (let i = 0; i < newArr.length; i += 1) {\n      newArr.splice(i, 1,\n        String.fromCharCode(Math.floor(Math.random() * 65535)));\n    }\n\n    return (\n      newArr.join('')\n    );\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{this.state.clockName}</h1>\n        {isVisible && (<Clock name={this.state.clockName} />)}\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isVisible: false })}\n          disabled={!isVisible}\n        >\n          Hide\n        </button>\n        {'  '}\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isVisible: true })}\n          disabled={isVisible}\n        >\n          Appear\n        </button>\n        {'  '}\n        <button\n          type=\"button\"\n          onClick={() => this.setState(\n            { clockName: this.randomLetter() },\n          )}\n        >\n          random name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}